@startuml
 participant "JSP\nJSPOrderBibliographicReferences" as JSPOrderBibliographicReferences order 0
 participant "services.teacher\nOrderBibliographicReferences" as OrderBibliographicReferences order 1
 participant "predicate\nAccessControl" as AccessControl order 15
 participant "core.security\nAuthenticate" as Authenticate order 20
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 23
 participant "core.domain\nUser_Base" as User_Base order 24
 participant "predicate\nAccessControlPredicate" as AccessControlPredicate order 25
 participant "domain\nPerson" as Person order 26
 participant "core.domain\nUser" as User order 31
 participant "domain\nExecutionCourse" as ExecutionCourse order 34
 participant "domain\nBibliographicReference" as BibliographicReference order 37
 JSPOrderBibliographicReferences -> OrderBibliographicReferences: getConnection()
 JSPOrderBibliographicReferences <- OrderBibliographicReferences: returnConnection()
 JSPOrderBibliographicReferences -> OrderBibliographicReferences: executeAction()
 OrderBibliographicReferences -> OrderBibliographicReferences: run\n(ExecutionCourse,List<BibliographicReference>):void
 OrderBibliographicReferences -> OrderBibliographicReferences: check(AccessControlPredicate<?>):void
 OrderBibliographicReferences -> AccessControl: getPerson():Person
 AccessControl -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 ALT userView == null
 ELSE else
 	AccessControl -> User_Base: getPerson():Person
 END
 OrderBibliographicReferences -> AccessControlPredicate: evaluate(E):boolean
 OPT !result
 	ALT requester == null
 	ELSE else
 		OrderBibliographicReferences -> Person: getUsername():String
 		Person -> Person: getUser():User
 		ALT user == null
 		ELSE else
 			Person -> User: getUsername():String
 			User -> User: getUsername():String
 		END
 	END
 END
 OrderBibliographicReferences -> ExecutionCourse: setBibliographicReferencesOrder(List<BibliographicReference>):void
 LOOP for:i < references.size()
 	ExecutionCourse -> BibliographicReference: setReferenceOrder(Integer):void
 END
 @enduml