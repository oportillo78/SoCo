@startuml
 participant "JSP\nJSPCreateNewProcess" as JSPCreateNewProcess order 0
 participant "services.caseHandling\nCreateNewProcess" as CreateNewProcess order 1
 participant "core.security\nAuthenticate" as Authenticate order 15
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 18
 participant "domain.caseHandling\nProcess" as Process order 19
 participant "domain.caseHandling\nActivity" as Activity order 24
 participant "domain.caseHandling\nProcess" as Process order 33
 participant "domain.caseHandling\nActivity" as Activity order 38
 participant "util\nPair" as Pair order 47
 JSPCreateNewProcess -> CreateNewProcess: getConnection()
 JSPCreateNewProcess <- CreateNewProcess: returnConnection()
 JSPCreateNewProcess -> CreateNewProcess: executeAction()
 CreateNewProcess -> CreateNewProcess: run\n(Class<? extends Process>,Object,List<Pair<Class<?>,Object>>):Process
 CreateNewProcess -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 CreateNewProcess -> Process: createNewProcess(User,Class<? extends Process>,Object)
 Process -> Process: getStartActivity\n(Class<? extends Process>):Activity<? extends Process>
 Process -> Activity: execute(P,User,Object)
 Activity -> Activity: checkPreConditions(P,User):void
 Activity -> Activity: executeActivity(P,User,Object)
 Activity -> Activity: executePosConditions(P,User,Object):void
 Activity -> Activity: log(P,User,Object):void
 LOOP for: activities
 	CreateNewProcess -> Process: executeActivity(User,String,Object):Process
 	Process -> Process: getActivity(String):Activity
 	Process -> Activity: execute(P,User,Object)
 	Activity -> Activity: checkPreConditions(P,User):void
 	Activity -> Activity: executeActivity(P,User,Object)
 	Activity -> Activity: executePosConditions(P,User,Object):void
 	Activity -> Activity: log(P,User,Object):void
 	CreateNewProcess -> Pair: getKey()
 	CreateNewProcess -> Pair: getValue()
 END
 @enduml