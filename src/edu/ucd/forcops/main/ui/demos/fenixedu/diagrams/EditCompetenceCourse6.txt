@startuml
 participant "JSP\nJSPEditCompetenceCourse" as JSPEditCompetenceCourse order 0
 participant "services.bolonhaManager\nEditCompetenceCourse" as EditCompetenceCourse order 1
 participant "util\nStringFormatter" as StringFormatter order 41
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 42
 participant "domain\nCompetenceCourse" as CompetenceCourse order 43
 participant "domain.degreeStructure\nCompetenceCourseInformation" as CompetenceCourseInformation order 108
 participant "dto\nGenericPair" as GenericPair order 109
 participant "domain.degreeStructure\nCompetenceCourseInformation" as CompetenceCourseInformation order 110
 participant "domain\nExecutionSemester" as ExecutionSemester order 111
 participant "org.joda.time\nYearMonthDay" as YearMonthDay order 112
 participant "domain.degreeStructure\nCompetenceCourseInformation" as CompetenceCourseInformation order 113
 participant "util\nUniqueAcronymCreator" as UniqueAcronymCreator order 114
 participant "dto\nGenericPair" as GenericPair order 131
 participant "dto\nGenericPair" as GenericPair order 132
 participant "dto\nGenericPair" as GenericPair order 133
 participant "dto\nGenericPair" as GenericPair order 134
 participant "domain.degreeStructure\nCompetenceCourseInformation" as CompetenceCourseInformation order 135
 participant "service.filter\nBolonhaManagerAuthorizationFilter" as BolonhaManagerAuthorizationFilter order 136
 participant "core.security\nAuthenticate" as Authenticate order 139
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 145
 participant "service.filter\nScientificCouncilAuthorizationFilter" as ScientificCouncilAuthorizationFilter order 146
 JSPEditCompetenceCourse -> EditCompetenceCourse: getConnection()
 JSPEditCompetenceCourse <- EditCompetenceCourse: returnConnection()
 JSPEditCompetenceCourse -> EditCompetenceCourse: executeAction()
 EditCompetenceCourse -> EditCompetenceCourse: runEditCompetenceCourse\n(String,String,String,Boolean,CompetenceCourseLevel,CompetenceCourseType,CurricularStage,String):void
 EditCompetenceCourse -> BolonhaManagerAuthorizationFilter: execute():void
 BolonhaManagerAuthorizationFilter -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 EditCompetenceCourse -> EditCompetenceCourse: run\n(String,String,String,Boolean,CompetenceCourseLevel,CompetenceCourseType,CurricularStage,String):void
 EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 EditCompetenceCourse -> EditCompetenceCourse: checkIfCanEditCompetenceCourse(CompetenceCourse,String,String):void
 EditCompetenceCourse -> StringFormatter: normalize(String):String
 EditCompetenceCourse -> StringFormatter: normalize(String):String
 EditCompetenceCourse -> CompetenceCourse: edit\n(String,String,Boolean,CompetenceCourseLevel,CompetenceCourseType,CurricularStage):void
 CompetenceCourse -> CompetenceCourse: changeCurricularStage(CurricularStage):void
 OPT curricularStage.equals(CurricularStage.APPROVED)
 	CompetenceCourse -> CompetenceCourse: setCreationDateYearMonthDay(YearMonthDay):void
 	CompetenceCourse -> YearMonthDay: YearMonthDay()
 END
 CompetenceCourse -> CompetenceCourse: setCurricularStage(CurricularStage):void
 CompetenceCourse -> CompetenceCourse: setType(CompetenceCourseType):void
 CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 CompetenceCourse -> CompetenceCourseInformation: edit\n(String,String,Boolean,CompetenceCourseLevel):void
 CompetenceCourse -> UniqueAcronymCreator: UniqueAcronymCreator\n(Function<T,String>,Function<T,String>,Set<T>)
 CompetenceCourse -> CompetenceCourse: readBolonhaCompetenceCourses():Collection<CompetenceCourse>
 CompetenceCourse -> UniqueAcronymCreator: create(T):GenericPair<String,Set<T>>
 CompetenceCourse -> GenericPair: getLeft()
 CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformationUntil\n(ExecutionSemester):CompetenceCourseInformation
 CompetenceCourse -> ExecutionSemester: readActualExecutionSemester():ExecutionSemester
 CompetenceCourse -> CompetenceCourseInformation: setAcronym(String):void
 EditCompetenceCourse -> CompetenceCourse: setCode(String):void
 CompetenceCourse -> CompetenceCourse: check(T,AccessControlPredicate<T>):void
 CompetenceCourse -> CompetenceCourse: find(String):CompetenceCourse
 CompetenceCourse -> CompetenceCourse: setCode(String):void
 OPT NotAuthorizedException ex1
 	EditCompetenceCourse -> ScientificCouncilAuthorizationFilter: execute():void
 	ScientificCouncilAuthorizationFilter -> Authenticate: getUser():User
 	ALT ?
 	ELSE else
 		Authenticate -> AuthenticationContext: getUser():User
 	END
 	EditCompetenceCourse -> EditCompetenceCourse: run\n(String,String,String,Boolean,CompetenceCourseLevel,CompetenceCourseType,CurricularStage,String):void
 	EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 	EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 	EditCompetenceCourse -> EditCompetenceCourse: checkIfCanEditCompetenceCourse(CompetenceCourse,String,String):void
 	EditCompetenceCourse -> StringFormatter: normalize(String):String
 	EditCompetenceCourse -> StringFormatter: normalize(String):String
 	EditCompetenceCourse -> CompetenceCourse: edit\n(String,String,Boolean,CompetenceCourseLevel,CompetenceCourseType,CurricularStage):void
 	CompetenceCourse -> CompetenceCourse: changeCurricularStage(CurricularStage):void
 	CompetenceCourse -> CompetenceCourse: setType(CompetenceCourseType):void
 	CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 	CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformationUntil\n(ExecutionSemester):CompetenceCourseInformation
 	CompetenceCourse -> ExecutionSemester: readActualExecutionSemester():ExecutionSemester
 	CompetenceCourse -> CompetenceCourseInformation: edit\n(String,String,Boolean,CompetenceCourseLevel):void
 	CompetenceCourse -> UniqueAcronymCreator: UniqueAcronymCreator\n(Function<T,String>,Function<T,String>,Set<T>)
 	CompetenceCourse -> CompetenceCourse: readBolonhaCompetenceCourses():Collection<CompetenceCourse>
 	CompetenceCourse -> UniqueAcronymCreator: create(T):GenericPair<String,Set<T>>
 	UniqueAcronymCreator -> UniqueAcronymCreator: initialize():void
 	UniqueAcronymCreator -> UniqueAcronymCreator: noAccent(String):String
 	UniqueAcronymCreator -> UniqueAcronymCreator: constructBasicAcronym(StringBuilder):String
 	ALT canAccept(acronym)
 		UniqueAcronymCreator -> GenericPair: GenericPair(T,V)
 	ELSE else
 		UniqueAcronymCreator -> UniqueAcronymCreator: constructExtendedAcronym(String):String
 		ALT canAccept(acronym)
 			UniqueAcronymCreator -> GenericPair: GenericPair(T,V)
 		ELSE else
 			LOOP while: !canAccept(acronym.toString()) && (index <= slotValueWithNoAccents.length())
 				UniqueAcronymCreator -> UniqueAcronymCreator: appendLastChar(int,StringBuilder):StringBuilder
 				OPT canAccept(acronym)
 					UniqueAcronymCreator -> GenericPair: GenericPair(T,V)
 				END
 			END
 		END
 	END
 	CompetenceCourse -> GenericPair: getLeft()
 	CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 	CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformationUntil\n(ExecutionSemester):CompetenceCourseInformation
 	CompetenceCourse -> ExecutionSemester: readActualExecutionSemester():ExecutionSemester
 	CompetenceCourse -> CompetenceCourseInformation: setAcronym(String):void
 	EditCompetenceCourse -> CompetenceCourse: setCode(String):void
 END
 @enduml