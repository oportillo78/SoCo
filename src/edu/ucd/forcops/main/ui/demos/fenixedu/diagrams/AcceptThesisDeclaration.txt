@startuml
 participant "JSP\nJSPAcceptThesisDeclaration" as JSPAcceptThesisDeclaration order 0
 participant "services.thesis\nAcceptThesisDeclaration" as AcceptThesisDeclaration order 1
 participant "domain.thesis\nThesis" as Thesis order 11
 participant "org.joda.time\nDateTime" as DateTime order 22
 participant "org.joda.time\nDateTimeUtils" as DateTimeUtils order 31
 participant "org.joda.time.chrono\nISOChronology" as ISOChronology order 32
 participant "service.filter.student.thesis\nStudentThesisAuthorizationFilter" as StudentThesisAuthorizationFilter order 33
 participant "core.security\nAuthenticate" as Authenticate order 46
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 49
 participant "core.domain\nUser_Base" as User_Base order 50
 participant "domain\nPerson" as Person order 51
 JSPAcceptThesisDeclaration -> AcceptThesisDeclaration: getConnection()
 JSPAcceptThesisDeclaration <- AcceptThesisDeclaration: returnConnection()
 JSPAcceptThesisDeclaration -> AcceptThesisDeclaration: executeAction()
 AcceptThesisDeclaration -> AcceptThesisDeclaration: runAcceptThesisDeclaration\n(Thesis,ThesisVisibilityType,DateTime):void
 AcceptThesisDeclaration -> StudentThesisAuthorizationFilter: execute(Thesis):void
 StudentThesisAuthorizationFilter -> StudentThesisAuthorizationFilter: getStudent():Student
 StudentThesisAuthorizationFilter -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 StudentThesisAuthorizationFilter -> User_Base: getPerson():Person
 StudentThesisAuthorizationFilter -> Person: getStudent():Student
 OPT student == null
 	StudentThesisAuthorizationFilter -> StudentThesisAuthorizationFilter: abort():void
 END
 OPT thesis.getStudent() != student
 	StudentThesisAuthorizationFilter -> StudentThesisAuthorizationFilter: abort():void
 END
 AcceptThesisDeclaration -> AcceptThesisDeclaration: run\n(Thesis,ThesisVisibilityType,DateTime):void
 AcceptThesisDeclaration -> Thesis: acceptDeclaration(ThesisVisibilityType,DateTime):void
 Thesis -> Thesis: setDeclarationAccepted(Boolean):void
 Thesis -> Thesis: setVisibility(ThesisVisibilityType):void
 Thesis -> Thesis: setDocumentsAvailableAfter(DateTime):void
 Thesis -> Thesis: setDeclarationAcceptedTime(DateTime):void
 Thesis -> DateTime: DateTime()
 DateTime -> DateTime: BaseDateTime()
 DateTime -> DateTime: BaseDateTime(long,Chronology)
 DateTime -> DateTimeUtils: currentTimeMillis():long
 DateTime -> ISOChronology: getInstance():ISOChronology
 @enduml