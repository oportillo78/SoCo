#6
The control [RBAC]
With description [A method for coarse-grain access control that is based on a personâ€™s role within a business. As a result, employees are only allowed to access the information necessary to effectively perform their job duties]
With new actors [AuthorizationEngine, AccessControlList]
With sorting [AuthorizationEngine:400, AccessControlList:401]
A pointcut composed of [1] message(s) involving the [check] operations, the [$service, *] actors, and the [accesscontrolpredicate] data types. 
An advice of type [REPLACE_ALL] with the instructions:
	$service -> AuthorizationEngine: checkAuthorization(studentID, userID)
	AuthorizationEngine -> AccessControlList: checkACL(asset, userID)
	AccessControlList -> AccessControlList: checkPolicy(user, role, permission, operation)
	AuthorizationEngine <-- AccessControlList: userRolePrivileges
	alt if authorizationResponse=accessGranted
		$service <-- AuthorizationEngine: accessGranted
	else else
		$service <-- AuthorizationEngine: accessDenied
	end