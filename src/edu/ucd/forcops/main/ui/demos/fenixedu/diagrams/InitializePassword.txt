@startuml
 participant "JSP\nJSPInitializePassword" as JSPInitializePassword order 0
 participant "services.person\nInitializePassword" as InitializePassword order 1
 participant "FenixEduAcademicConfiguration\nConfigurationProperties" as ConfigurationProperties order 51
 participant "com.google.common.io\nBaseEncoding" as BaseEncoding order 52
 participant "com.google.common.io\nBaseEncoding" as BaseEncoding order 53
 participant "javax.ws.rs.core\nForm" as Form order 56
 participant "javax.ws.rs.core\nAbstractMultivaluedMap" as AbstractMultivaluedMap order 61
 participant "core.domain\nUser" as User order 62
 participant "javax.ws.rs.client\nClient" as Client order 67
 participant "FenixEduAcademicConfiguration" as FenixEduAcademicConfiguration order 68
 participant "configuration\nConfigurationInvocationHandler" as ConfigurationInvocationHandler order 71
 participant "com.google.common.reflect\nReflection" as Reflection order 76
 participant "FenixEduAcademicConfiguration\nConfigurationProperties" as ConfigurationProperties order 77
 participant "javax.ws.rs.client\nWebTarget" as WebTarget order 78
 participant "javax.ws.rs.client\nEntity" as Entity order 79
 participant "javax.ws.rs.core\nVariant" as Variant order 86
 participant "javax.ws.rs.core\nResponse" as Response order 87
 participant "com.google.gson\nGson" as Gson order 88
 participant "java.io\nStringReader" as StringReader order 133
 participant "com.google.gson.internal\nConstructorConstructor" as ConstructorConstructor order 134
 participant "com.google.gson.internal.bind\nTypeAdapters" as TypeAdapters order 135
 participant "com.google.gson.internal.bind\nCollectionTypeAdapterFactory" as CollectionTypeAdapterFactory order 136
 participant "com.google.gson.internal.bind\nMapTypeAdapterFactory" as MapTypeAdapterFactory order 137
 participant "com.google.gson.internal.bind\nJsonAdapterAnnotationTypeAdapterFactory" as JsonAdapterAnnotationTypeAdapterFactory order 138
 participant "com.google.gson.internal.bind\nReflectiveTypeAdapterFactory" as ReflectiveTypeAdapterFactory order 139
 participant "com.google.gson.internal\nPrimitives" as Primitives order 140
 participant "com.google.gson.internal..Gson\nPreconditions" as Preconditions order 143
 participant "services.person.InitializePassword\nOutputBean" as OutputBean order 144
 JSPInitializePassword -> InitializePassword: getConnection()
 JSPInitializePassword <- InitializePassword: returnConnection()
 JSPInitializePassword -> InitializePassword: executeAction()
 InitializePassword -> InitializePassword: run(User,String):void
 InitializePassword -> Form: Form()
 Form -> Form: Form(MultivaluedMap<String,String>)
 Form -> AbstractMultivaluedMap: AbstractMultivaluedMap(Map<K,List<V>>)
 InitializePassword -> User: getUsername():String
 User -> User: getUsername():String
 User -> User: getUsername():String
 InitializePassword -> Form: param(String,String):Form
 InitializePassword -> Form: param(String,String):Form
 InitializePassword -> Client: target(String):WebTarget
 InitializePassword -> FenixEduAcademicConfiguration: getConfiguration():ConfigurationProperties
 FenixEduAcademicConfiguration -> ConfigurationInvocationHandler: getConfiguration(Class<T>):T
 OPT ?
 	ConfigurationInvocationHandler -> Reflection: newProxy(Class<T>,InvocationHandler):T
 	ConfigurationInvocationHandler -> ConfigurationInvocationHandler: ConfigurationInvocationHandler()
 END
 InitializePassword -> ConfigurationProperties: getWebServicesInternationalRegistrationUrl\n():String
 InitializePassword -> WebTarget: request(String[]):Builder
 InitializePassword -> InitializePassword: getServiceAuth():String
 InitializePassword -> FenixEduAcademicConfiguration: getConfiguration():ConfigurationProperties
 InitializePassword -> ConfigurationProperties: getWebServicesInternationalRegistrationUsername\n():String
 InitializePassword -> ConfigurationProperties: getWebServicesInternationalRegistrationPassword\n():String
 InitializePassword -> BaseEncoding: base64():BaseEncoding
 InitializePassword -> BaseEncoding: encode(byte[]):String
 BaseEncoding -> BaseEncoding: encode(byte[],int,int):String
 InitializePassword -> WebTarget: header(String,Object):Builder
 InitializePassword -> Entity: form(Form):Entity<Form>
 Entity -> Entity: Entity(T,MediaType)
 Entity -> Entity: Entity(T,Variant,Annotation[])
 Entity -> Variant: Variant(MediaType,Locale,String)
 InitializePassword -> WebTarget: post(Entity<?>):Response
 OPT post.getStatus() == 200
 	InitializePassword -> Response: readEntity(Class<T>):T
 	InitializePassword -> Gson: Gson()
 	Gson -> Gson: Gson\n(Excluder,FieldNamingStrategy,Map<Type,InstanceCreator<?>>,boolean,boolean,boolean,boolean,boolean,boolean,boolean,LongSerializationPolicy,String,int,int,List<TypeAdapterFactory>,List<TypeAdapterFactory>,List<TypeAdapterFactory>)
 	Gson -> ConstructorConstructor: ConstructorConstructor(Map<Type,InstanceCreator<?>>)
 	Gson -> Gson: longAdapter\n(LongSerializationPolicy):TypeAdapter<Number>
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,Class<TT>,TypeAdapter<? super TT>):TypeAdapterFactory
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,Class<TT>,TypeAdapter<? super TT>):TypeAdapterFactory
 	Gson -> Gson: doubleAdapter(boolean):TypeAdapter<Number>
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,Class<TT>,TypeAdapter<? super TT>):TypeAdapterFactory
 	Gson -> Gson: floatAdapter(boolean):TypeAdapter<Number>
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,TypeAdapter<TT>):TypeAdapterFactory
 	Gson -> Gson: atomicLongAdapter\n(TypeAdapter<Number>):TypeAdapter<AtomicLong>
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,TypeAdapter<TT>):TypeAdapterFactory
 	Gson -> Gson: atomicLongArrayAdapter\n(TypeAdapter<Number>):TypeAdapter<AtomicLongArray>
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,TypeAdapter<TT>):TypeAdapterFactory
 	Gson -> TypeAdapters: newFactory\n(Class<TT>,TypeAdapter<TT>):TypeAdapterFactory
 	Gson -> CollectionTypeAdapterFactory: CollectionTypeAdapterFactory(ConstructorConstructor)
 	Gson -> MapTypeAdapterFactory: MapTypeAdapterFactory(ConstructorConstructor,boolean)
 	Gson -> JsonAdapterAnnotationTypeAdapterFactory: JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor)
 	Gson -> ReflectiveTypeAdapterFactory: ReflectiveTypeAdapterFactory\n(ConstructorConstructor,FieldNamingStrategy,Excluder,JsonAdapterAnnotationTypeAdapterFactory)
 	InitializePassword -> Gson: fromJson(String,Class<T>):T
 	Gson -> Gson: fromJson(String,Type):T
 	Gson -> StringReader: StringReader(String)
 	Gson -> Gson: fromJson(Reader,Type):T
 	Gson -> Primitives: wrap(Class<T>):Class<T>
 	Primitives -> Preconditions: checkNotNull(T):T
 END
 OPT output == null || output.getErrno() != 0
 	InitializePassword -> OutputBean: getError():String
 	InitializePassword -> OutputBean: getErrno():Integer
 	InitializePassword -> OutputBean: getError():String
 END
 @enduml