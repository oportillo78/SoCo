@startuml
 participant "JSP\nJSPEditCompetenceCourse" as JSPEditCompetenceCourse order 0
 participant "services.bolonhaManager\nEditCompetenceCourse" as EditCompetenceCourse order 1
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 25
 participant "domain\nCompetenceCourse" as CompetenceCourse order 26
 participant "domain.degreeStructure\nCompetenceCourseInformation" as CompetenceCourseInformation order 39
 participant "domain\nExecutionSemester" as ExecutionSemester order 40
 participant "core.domain\nBennu" as Bennu order 45
 participant "core.domain\nBennu" as Bennu order 46
 participant "domain.degreeStructure\nCompetenceCourseInformation" as CompetenceCourseInformation order 47
 participant "service.filter\nBolonhaManagerAuthorizationFilter" as BolonhaManagerAuthorizationFilter order 60
 participant "core.security\nAuthenticate" as Authenticate order 63
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 69
 participant "service.filter\nScientificCouncilAuthorizationFilter" as ScientificCouncilAuthorizationFilter order 70
 JSPEditCompetenceCourse -> EditCompetenceCourse: getConnection()
 JSPEditCompetenceCourse <- EditCompetenceCourse: returnConnection()
 JSPEditCompetenceCourse -> EditCompetenceCourse: executeAction()
 EditCompetenceCourse -> EditCompetenceCourse: runEditCompetenceCourse\n(String,String,String,String,String,String,String):void
 EditCompetenceCourse -> BolonhaManagerAuthorizationFilter: execute():void
 BolonhaManagerAuthorizationFilter -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 EditCompetenceCourse -> EditCompetenceCourse: run\n(String,String,String,String,String,String,String):void
 EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 EditCompetenceCourse -> CompetenceCourse: edit\n(String,String,String,String,String,String):void
 CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformationUntil\n(ExecutionSemester):CompetenceCourseInformation
 CompetenceCourse -> ExecutionSemester: readActualExecutionSemester():ExecutionSemester
 ExecutionSemester -> Bennu: getInstance():Bennu
 ExecutionSemester -> Bennu: getExecutionPeriodsSet():Set<ExecutionSemester>
 CompetenceCourse -> CompetenceCourseInformation: edit\n(String,String,String,String,String,String):void
 CompetenceCourseInformation -> CompetenceCourseInformation: setObjectives(String):void
 CompetenceCourseInformation -> CompetenceCourseInformation: setProgram(String):void
 CompetenceCourseInformation -> CompetenceCourseInformation: setEvaluationMethod(String):void
 CompetenceCourseInformation -> CompetenceCourseInformation: setObjectivesEn(String):void
 CompetenceCourseInformation -> CompetenceCourseInformation: setProgramEn(String):void
 CompetenceCourseInformation -> CompetenceCourseInformation: setEvaluationMethodEn(String):void
 OPT NotAuthorizedException ex1
 	EditCompetenceCourse -> ScientificCouncilAuthorizationFilter: execute():void
 	ScientificCouncilAuthorizationFilter -> Authenticate: getUser():User
 	ALT ?
 	ELSE else
 		Authenticate -> AuthenticationContext: getUser():User
 	END
 	EditCompetenceCourse -> EditCompetenceCourse: run\n(String,String,String,String,String,String,String):void
 	EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 	EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 	EditCompetenceCourse -> CompetenceCourse: edit\n(String,String,String,String,String,String):void
 	CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 	CompetenceCourse -> CompetenceCourseInformation: edit\n(String,String,String,String,String,String):void
 END
 @enduml