@startuml
 participant "JSP\nJSPEditCompetenceCourse" as JSPEditCompetenceCourse order 0
 participant "services.bolonhaManager\nEditCompetenceCourse" as EditCompetenceCourse order 1
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 25
 participant "domain\nCompetenceCourse" as CompetenceCourse order 26
 participant "domain.degreeStructure\nBibliographicReferences" as BibliographicReferences order 43
 participant "domain.degreeStructure\nCompetenceCourseInformation_Base" as CompetenceCourseInformation_Base order 44
 participant "domain.degreeStructure\nBibliographicReferences" as BibliographicReferences order 45
 participant "com.google.common.collect\nImmutableList" as ImmutableList order 52
 participant "service.filter\nBolonhaManagerAuthorizationFilter" as BolonhaManagerAuthorizationFilter order 53
 participant "core.security\nAuthenticate" as Authenticate order 56
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 62
 participant "service.filter\nScientificCouncilAuthorizationFilter" as ScientificCouncilAuthorizationFilter order 63
 JSPEditCompetenceCourse -> EditCompetenceCourse: getConnection()
 JSPEditCompetenceCourse <- EditCompetenceCourse: returnConnection()
 JSPEditCompetenceCourse -> EditCompetenceCourse: executeAction()
 EditCompetenceCourse -> EditCompetenceCourse: runEditCompetenceCourse(String,Integer):void
 EditCompetenceCourse -> BolonhaManagerAuthorizationFilter: execute():void
 BolonhaManagerAuthorizationFilter -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 EditCompetenceCourse -> EditCompetenceCourse: run(String,Integer):void
 EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 EditCompetenceCourse -> CompetenceCourse: deleteBibliographicReference(Integer):void
 CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 CompetenceCourse -> CompetenceCourseInformation_Base: setBibliographicReferences(BibliographicReferences):void
 CompetenceCourse -> CompetenceCourseInformation_Base: getBibliographicReferences():BibliographicReferences
 CompetenceCourse -> BibliographicReferences: without(int):BibliographicReferences
 BibliographicReferences -> BibliographicReferences: reOrderBibliographicReferences(List<BibliographicReference>):void
 BibliographicReferences -> BibliographicReferences: BibliographicReferences(List<BibliographicReference>)
 BibliographicReferences -> ImmutableList: copyOf\n(Collection<? extends E>):ImmutableList<E>
 OPT NotAuthorizedException ex1
 	EditCompetenceCourse -> ScientificCouncilAuthorizationFilter: execute():void
 	ScientificCouncilAuthorizationFilter -> Authenticate: getUser():User
 	ALT ?
 	ELSE else
 		Authenticate -> AuthenticationContext: getUser():User
 	END
 	EditCompetenceCourse -> EditCompetenceCourse: run(String,Integer):void
 	EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 	EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 	EditCompetenceCourse -> CompetenceCourse: deleteBibliographicReference(Integer):void
 	CompetenceCourse -> CompetenceCourse: getMostRecentCompetenceCourseInformation():CompetenceCourseInformation
 	CompetenceCourse -> CompetenceCourseInformation_Base: setBibliographicReferences(BibliographicReferences):void
 	CompetenceCourse -> CompetenceCourseInformation_Base: getBibliographicReferences():BibliographicReferences
 	CompetenceCourse -> BibliographicReferences: without(int):BibliographicReferences
 END
 @enduml