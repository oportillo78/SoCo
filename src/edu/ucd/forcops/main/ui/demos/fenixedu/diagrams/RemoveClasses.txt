@startuml
 participant "JSP\nJSPRemoveClasses" as JSPRemoveClasses order 0
 participant "services.resourceAllocationManager\nRemoveClasses" as RemoveClasses order 1
 participant "predicate\nAccessControl" as AccessControl order 23
 participant "core.security\nAuthenticate" as Authenticate order 28
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 31
 participant "core.domain\nUser_Base" as User_Base order 32
 participant "predicate\nAccessControlPredicate" as AccessControlPredicate order 33
 participant "domain\nPerson" as Person order 34
 participant "core.domain\nUser" as User order 39
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 40
 participant "dto\nInfoShift" as InfoShift order 41
 participant "domain\nShift" as Shift order 46
 participant "domain\nShift_Base" as Shift_Base order 47
 participant "domain\nSchoolClass_Base" as SchoolClass_Base order 48
 JSPRemoveClasses -> RemoveClasses: getConnection()
 JSPRemoveClasses <- RemoveClasses: returnConnection()
 JSPRemoveClasses -> RemoveClasses: executeAction()
 RemoveClasses -> RemoveClasses: run(InfoShift,List<String>):Boolean
 RemoveClasses -> RemoveClasses: check(AccessControlPredicate<?>):void
 RemoveClasses -> AccessControl: getPerson():Person
 AccessControl -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 ALT userView == null
 ELSE else
 	AccessControl -> User_Base: getPerson():Person
 END
 RemoveClasses -> AccessControlPredicate: evaluate(E):boolean
 OPT !result
 	ALT requester == null
 	ELSE else
 		RemoveClasses -> Person: getUsername():String
 		Person -> Person: getUser():User
 		ALT user == null
 		ELSE else
 			Person -> User: getUsername():String
 		END
 	END
 END
 RemoveClasses -> FenixFramework: getDomainObject(String):T
 RemoveClasses -> InfoShift: getExternalId():String
 InfoShift -> InfoShift: getShift():Shift
 InfoShift -> Shift: getExternalId():String
 LOOP for:i < classOIDs.size()
 	RemoveClasses -> FenixFramework: getDomainObject(String):T
 	RemoveClasses -> Shift_Base: getAssociatedClassesSet():Set<SchoolClass>
 	RemoveClasses -> SchoolClass_Base: getAssociatedShiftsSet():Set<Shift>
 END
 @enduml