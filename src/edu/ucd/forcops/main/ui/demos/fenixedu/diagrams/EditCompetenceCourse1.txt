@startuml
 participant "JSP\nJSPEditCompetenceCourse" as JSPEditCompetenceCourse order 0
 participant "services.bolonhaManager\nEditCompetenceCourse" as EditCompetenceCourse order 1
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 25
 participant "domain\nCompetenceCourse" as CompetenceCourse order 26
 participant "org.joda.time\nYearMonthDay" as YearMonthDay order 39
 participant "org.joda.time\nYearMonthDay" as YearMonthDay order 40
 participant "service.filter\nBolonhaManagerAuthorizationFilter" as BolonhaManagerAuthorizationFilter order 41
 participant "core.security\nAuthenticate" as Authenticate order 44
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 48
 participant "service.filter\nScientificCouncilAuthorizationFilter" as ScientificCouncilAuthorizationFilter order 49
 JSPEditCompetenceCourse -> EditCompetenceCourse: getConnection()
 JSPEditCompetenceCourse <- EditCompetenceCourse: returnConnection()
 JSPEditCompetenceCourse -> EditCompetenceCourse: executeAction()
 EditCompetenceCourse -> EditCompetenceCourse: runEditCompetenceCourse(String,CurricularStage):void
 EditCompetenceCourse -> BolonhaManagerAuthorizationFilter: execute():void
 BolonhaManagerAuthorizationFilter -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 EditCompetenceCourse -> EditCompetenceCourse: run(String,CurricularStage):void
 EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 EditCompetenceCourse -> CompetenceCourse: changeCurricularStage(CurricularStage):void
 OPT curricularStage.equals(CurricularStage.APPROVED)
 	CompetenceCourse -> CompetenceCourse: setCreationDateYearMonthDay(YearMonthDay):void
 	CompetenceCourse -> YearMonthDay: YearMonthDay()
 END
 CompetenceCourse -> CompetenceCourse: setCurricularStage(CurricularStage):void
 OPT NotAuthorizedException ex1
 	EditCompetenceCourse -> ScientificCouncilAuthorizationFilter: execute():void
 	ScientificCouncilAuthorizationFilter -> Authenticate: getUser():User
 	EditCompetenceCourse -> EditCompetenceCourse: run(String,CurricularStage):void
 	EditCompetenceCourse -> EditCompetenceCourse: readCompetenceCourse(String):CompetenceCourse
 	EditCompetenceCourse -> FenixFramework: getDomainObject(String):T
 	EditCompetenceCourse -> CompetenceCourse: changeCurricularStage(CurricularStage):void
 	OPT curricularStage.equals(CurricularStage.APPROVED)
 		CompetenceCourse -> CompetenceCourse: setCreationDateYearMonthDay(YearMonthDay):void
 		CompetenceCourse -> YearMonthDay: YearMonthDay()
 	END
 	CompetenceCourse -> CompetenceCourse: setCurricularStage(CurricularStage):void
 END
 @enduml