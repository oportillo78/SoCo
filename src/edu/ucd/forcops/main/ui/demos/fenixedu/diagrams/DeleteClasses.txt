@startuml
 participant "JSP\nJSPDeleteClasses" as JSPDeleteClasses order 0
 participant "services.resourceAllocationManager\nDeleteClasses" as DeleteClasses order 1
 participant "predicate\nAccessControl" as AccessControl order 17
 participant "core.security\nAuthenticate" as Authenticate order 23
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 26
 participant "core.domain\nUser_Base" as User_Base order 27
 participant "predicate\nAccessControlPredicate" as AccessControlPredicate order 28
 participant "domain\nPerson" as Person order 30
 participant "core.domain\nUser" as User order 36
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 39
 participant "domain\nSchoolClass" as SchoolClass order 40
 participant "pt.ist.fenixframework\nDomainObject" as DomainObject order 58
 JSPDeleteClasses -> DeleteClasses: getConnection()
 JSPDeleteClasses <- DeleteClasses: returnConnection()
 JSPDeleteClasses -> DeleteClasses: executeAction()
 DeleteClasses -> DeleteClasses: run(List<String>):Boolean
 DeleteClasses -> DeleteClasses: check(AccessControlPredicate<?>):void
 DeleteClasses -> AccessControl: getPerson():Person
 AccessControl -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 ALT userView == null
 ELSE else
 	AccessControl -> User_Base: getPerson():Person
 END
 DeleteClasses -> AccessControlPredicate: evaluate(E):boolean
 OPT !result
 	ALT requester == null
 	ELSE else
 		DeleteClasses -> Person: getUsername():String
 		Person -> Person: getUser():User
 		ALT user == null
 		ELSE else
 			Person -> User: getUsername():String
 			User -> User: getUsername():String
 		END
 	END
 END
 LOOP for: classOIDs
 	DeleteClasses -> FenixFramework: getDomainObject(String):T
 	DeleteClasses -> SchoolClass: delete():void
 	SchoolClass -> SchoolClass: check(T,AccessControlPredicate<T>):void
 	SchoolClass -> AccessControl: getPerson():Person
 	SchoolClass -> AccessControlPredicate: evaluate(E):boolean
 	OPT !result
 		ALT requester == null
 		ELSE else
 			SchoolClass -> Person: getUsername():String
 		END
 		SchoolClass -> DomainObject: getExternalId():String
 	END
 	SchoolClass -> SchoolClass: getAssociatedShiftsSet():Set<Shift>
 	SchoolClass -> SchoolClass: setExecutionDegree(ExecutionDegree):void
 	SchoolClass -> SchoolClass: setExecutionPeriod(ExecutionSemester):void
 	SchoolClass -> SchoolClass: setRootDomainObject(Bennu):void
 	SchoolClass -> SchoolClass: deleteDomainObject():void
 END
 @enduml