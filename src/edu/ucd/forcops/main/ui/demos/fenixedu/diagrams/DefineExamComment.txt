@startuml
 participant "JSP\nJSPDefineExamComment" as JSPDefineExamComment order 0
 participant "services.resourceAllocationManager\nDefineExamComment" as DefineExamComment order 1
 participant "predicate\nAccessControl" as AccessControl order 19
 participant "core.security\nAuthenticate" as Authenticate order 24
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 27
 participant "core.domain\nUser_Base" as User_Base order 28
 participant "predicate\nAccessControlPredicate" as AccessControlPredicate order 29
 participant "domain\nPerson" as Person order 30
 participant "core.domain\nUser" as User order 35
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 38
 participant "domain\nExecutionSemester" as ExecutionSemester order 39
 participant "domain\nExecutionCourse" as ExecutionCourse order 44
 participant "domain\nExecutionCourse_Base" as ExecutionCourse_Base order 45
 JSPDefineExamComment -> DefineExamComment: getConnection()
 JSPDefineExamComment <- DefineExamComment: returnConnection()
 JSPDefineExamComment -> DefineExamComment: executeAction()
 DefineExamComment -> DefineExamComment: run(String,String,String):void
 DefineExamComment -> DefineExamComment: check(AccessControlPredicate<?>):void
 DefineExamComment -> AccessControl: getPerson():Person
 AccessControl -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 ALT userView == null
 ELSE else
 	AccessControl -> User_Base: getPerson():Person
 END
 DefineExamComment -> AccessControlPredicate: evaluate(E):boolean
 OPT !result
 	ALT requester == null
 	ELSE else
 		DefineExamComment -> Person: getUsername():String
 		Person -> Person: getUser():User
 		ALT user == null
 		ELSE else
 			Person -> User: getUsername():String
 			User -> User: getUsername():String
 		END
 	END
 END
 DefineExamComment -> FenixFramework: getDomainObject(String):T
 DefineExamComment -> ExecutionSemester: getExecutionCourseByInitials(String):ExecutionCourse
 ExecutionSemester -> ExecutionSemester: getAssociatedExecutionCoursesSet():Set<ExecutionCourse>
 ExecutionSemester -> ExecutionCourse: getSigla():String
 DefineExamComment -> ExecutionCourse_Base: setComment(String):void
 @enduml