@startuml
 participant "JSP\nJSPLerTurnosDeDisciplinaExecucao" as JSPLerTurnosDeDisciplinaExecucao order 0
 participant "services.resourceAllocationManager\nLerTurnosDeDisciplinaExecucao" as LerTurnosDeDisciplinaExecucao order 1
 participant "predicate\nAccessControl" as AccessControl order 21
 participant "core.security\nAuthenticate" as Authenticate order 26
 participant "core.domain\nAuthenticationContext" as AuthenticationContext order 29
 participant "core.domain\nUser_Base" as User_Base order 30
 participant "predicate\nAccessControlPredicate" as AccessControlPredicate order 31
 participant "domain\nPerson" as Person order 32
 participant "core.domain\nUser" as User order 37
 participant "pt.ist.fenixframework\nFenixFramework" as FenixFramework order 40
 participant "dto\nInfoExecutionCourse" as InfoExecutionCourse order 41
 participant "domain\nExecutionCourse" as ExecutionCourse order 46
 participant "domain\nExecutionCourse" as ExecutionCourse order 47
 participant "domain\nCourseLoad_Base" as CourseLoad_Base order 50
 participant "dto\nInfoShift" as InfoShift order 51
 participant "domain\nShift" as Shift order 60
 participant "domain\nShiftGroupingProperties_Base" as ShiftGroupingProperties_Base order 61
 JSPLerTurnosDeDisciplinaExecucao -> LerTurnosDeDisciplinaExecucao: getConnection()
 JSPLerTurnosDeDisciplinaExecucao <- LerTurnosDeDisciplinaExecucao: returnConnection()
 JSPLerTurnosDeDisciplinaExecucao -> LerTurnosDeDisciplinaExecucao: executeAction()
 LerTurnosDeDisciplinaExecucao -> LerTurnosDeDisciplinaExecucao: run(InfoExecutionCourse):List<InfoShift>
 LerTurnosDeDisciplinaExecucao -> LerTurnosDeDisciplinaExecucao: check(AccessControlPredicate<?>):void
 LerTurnosDeDisciplinaExecucao -> AccessControl: getPerson():Person
 AccessControl -> Authenticate: getUser():User
 ALT ?
 ELSE else
 	Authenticate -> AuthenticationContext: getUser():User
 END
 ALT userView == null
 ELSE else
 	AccessControl -> User_Base: getPerson():Person
 END
 LerTurnosDeDisciplinaExecucao -> AccessControlPredicate: evaluate(E):boolean
 OPT !result
 	ALT requester == null
 	ELSE else
 		LerTurnosDeDisciplinaExecucao -> Person: getUsername():String
 		Person -> Person: getUser():User
 		ALT user == null
 		ELSE else
 			Person -> User: getUsername():String
 			User -> User: getUsername():String
 		END
 	END
 END
 LerTurnosDeDisciplinaExecucao -> FenixFramework: getDomainObject(String):T
 LerTurnosDeDisciplinaExecucao -> InfoExecutionCourse: getExternalId():String
 InfoExecutionCourse -> InfoExecutionCourse: getExecutionCourse():ExecutionCourse
 InfoExecutionCourse -> ExecutionCourse: getExternalId():String
 LerTurnosDeDisciplinaExecucao -> ExecutionCourse: getAssociatedShifts():Set<Shift>
 LOOP for: getCourseLoadsSet()
 	ExecutionCourse -> CourseLoad_Base: getShiftsSet():Set<Shift>
 END
 LOOP while: itShiftList.hasNext()
 	LerTurnosDeDisciplinaExecucao -> InfoShift: newInfoFromDomain(Shift):InfoShift
 	ALT shift == null
 	ELSE else
 		InfoShift -> InfoShift: InfoShift(Shift)
 		InfoShift -> InfoShift: getShift():Shift
 		InfoShift -> Shift: getShiftGroupingProperties():ShiftGroupingProperties
 		ALT groupingProperties != null
 			InfoShift -> ShiftGroupingProperties_Base: getCapacity():Integer
 		END
 	END
 END
 @enduml